{"version":3,"sources":["reportWebVitals.js","components/Dashboard/listItems.js","components/Dashboard/Styles.js","components/Config.js","components/Columns.js","components/Table.js","components/Dashboard/Title.js","text/about.md","components/About.js","components/Chart.js","components/Statistics.js","Dashboard.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mainListItems","ListItem","button","component","href","ListItemIcon","ListItemText","primary","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","paper","overflow","flexDirection","yearToRange","year","toString","YEARS","citation","citations","push","parseInt","split","Set","sort","CODES","codename","codes","getData","range_key","citations_data","data","dataArray","Object","assign","filterCodeNames","filters","codeNames","codeName","filter","includes","getCodeCitations","line_data","isNaN","TooltipText","tooltip","text","Tooltip","title","placement","arrow","className","TooltipTexts","values","tooltips","length","map","x","reduce","prev","curr","lastYear","Table","props","state","columns","options","print","filterType","filterArrayFullMatch","sortOrder","name","direction","rowsPerPage","selectableRows","setTableProps","size","event","this","setState","target","value","defaultValue","onChange","handleYearChange","label","customBodyRenderLite","dataIndex","row","rel","ABBREVIATIONS","cost","source","color","license","type","spdxUrl","searchUrl","encodeURIComponent","Button","React","Component","Title","Typography","variant","gutterBottom","children","MarkdownPane","markdownFile","markdown","classes","fetch","res","templateString","templateVars","packageJson","call","Grid","item","xs","Paper","Fragment","Home","container","aboutMD","THEME","axis","legend","fontSize","SingleChart","decodeURIComponent","useParams","reverseCitations","yearBegin","slice","reverse","point","ratio","Math","pow","toFixed","getTitle","id","nivoChart","legend_list","margin_right","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","axisTop","axisRight","axisBottom","orient","legendOffset","legendPosition","axisLeft","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","enableCrosshair","useMesh","legends","animate","costGraph","groups","Commercial","lines","group","sourceGraph","chartLink","absoluteGrowthList","line","relativeGrowthList","Card","message","footnote","widthSmall","widthLarge","sm","md","depositContext","CURRENT_YEAR","GROWTH","dataNew","dataOld","total","absoluteGrowth","relativeGrowth","typeCounts","delta","forEach","dNew","index","factor","parseFloat","a","b","citationGrowth","Copyright","align","Link","author","url","Date","getFullYear","repository","src","alt","Dashboard","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","CssBaseline","AppBar","position","Toolbar","IconButton","edge","onClick","noWrap","Hidden","smUp","implementation","Drawer","open","onClose","ModalProps","keepMounted","xsDown","Container","maxWidth","basename","exact","path","About","Statistics","Box","pt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6276be91.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n// import HomeIcon from '@material-ui/icons/Home';\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\n\nexport const mainListItems = (\n  <div>\n    {/* {      <ListItem button component={\"a\"} href={'#/'}>\n      <ListItemIcon>\n        <HomeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Home\" />\n    </ListItem>} */}\n    <ListItem button component={\"a\"} href={\"#/table\"}>\n      <ListItemIcon>\n        <TableChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Table\" />\n    </ListItem>\n    <ListItem button component={\"a\"} href={\"#/stats\"}>\n      <ListItemIcon>\n        <EqualizerIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Statistics\" />\n    </ListItem>\n    <ListItem button component={\"a\"} href={\"#/about\"}>\n      <ListItemIcon>\n        <InfoIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"About\" />\n    </ListItem>\n  </div>\n);\n\n// export const secondaryListItems = (\n//   <div>\n//     <ListSubheader inset>Saved reports</ListSubheader>\n//     <ListItem button>\n//       <ListItemIcon>\n//         <AssignmentIcon />\n//       </ListItemIcon>\n//       <ListItemText primary=\"Current month\" />\n//     </ListItem>\n//     <ListItem button>\n//       <ListItemIcon>\n//         <AssignmentIcon />\n//       </ListItemIcon>\n//       <ListItemText primary=\"Last quarter\" />\n//     </ListItem>\n//     <ListItem button>\n//       <ListItemIcon>\n//         <AssignmentIcon />\n//       </ListItemIcon>\n//       <ListItemText primary=\"Year-end sale\" />\n//     </ListItem>\n//   </div>\n// );\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 170;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  // for statistics & about views\n paper: {\n   padding: theme.spacing(2),\n   display: \"flex\",\n   overflow: \"auto\",\n   flexDirection: \"column\",\n },\n}));\n\nexport default useStyles;\n","import citations from \"../data/citations.json\";\nimport codes from \"../data/codes.json\";\n\n// Citation cutoff\nconst CUTOFF = 100;\n\nfunction yearToRange(year) {\n  /**\n   * Transform year to year range used in citations.json\n   *\n   * E.g. 2020 => \"2020-2020\"\n   */\n  return year.toString() + \"-\" + year.toString();\n}\n\nfunction rangeToYear(range) {\n  /**\n   * Transform year range used in citations.json to year\n   *\n   * E.g. \"2020-2020\" => 2020\n   */\n  return parseInt(range.split(\"-\")[0]);\n}\n\n// For whatever reason, one cannot simply use `citations.keys()`\nlet YEARS = [];\nfor (const citation in citations) {\n  YEARS.push(rangeToYear(citation));\n}\nYEARS = [...new Set(YEARS)];\nYEARS.sort();\n\nlet CODES = [];\nfor (const codename in codes) {\n  CODES.push(codename);\n}\n\nfunction getData(year) {\n  /**\n   * Get data for code table for a given year.\n   */\n  let range_key = yearToRange(year);\n  let citations_data = citations[range_key][\"citations\"];\n  let data = codes; //.slice();\n\n  for (const codename in data) {\n    data[codename][\"citations\"] = citations_data[codename][\"citations\"];\n    data[codename][\"datestamp\"] = citations_data[codename][\"datestamp\"];\n  }\n\n  let dataArray = [];\n  for (const codename in data) {\n    dataArray.push(Object.assign({}, data[codename]));\n  }\n  return dataArray;\n}\n\nfunction getDataChart() {\n  /**\n   * Get citation data for all codes\n   */\n  let lines = [];\n  for (const codeName of CODES.slice(0, 50)) {\n    lines.push({ id: codeName, data: getCodeCitations(codeName) });\n  }\n  return lines;\n}\n\nfunction filterCodeNames(filters) {\n  /**\n   * Return list of code names after applying filters.\n   *\n   * E.g. filters = {'type': ['DFT']}\n   */\n  let codeNames = [];\n  for (const codeName in codes) {\n    for (const filter in filters) {\n      if (filters[filter].includes(codes[codeName][filter])) {\n        codeNames.push(codeName);\n      }\n    }\n  }\n  return codeNames;\n}\n\nfunction getCodeCitations(codeNames) {\n  /**\n   * Return citations of requested codes vs years.\n   *\n   * Sums citations of all codes in codeNames.\n   */\n  let line_data = [];\n  for (const year of YEARS) {\n    let data = {};\n    let range_key = yearToRange(year);\n\n    data[\"x\"] = parseInt(year);\n    data[\"y\"] = 0;\n    for (const codeName of codeNames) {\n      data[\"y\"] += parseInt(\n        citations[range_key][\"citations\"][codeName][\"citations\"]\n      );\n    }\n    if (isNaN(data[\"y\"]) || data[\"y\"] <= 0) {\n      data[\"y\"] = 0;\n    }\n    line_data.push(data);\n  }\n  return line_data;\n}\n\nexport {\n  yearToRange,\n  rangeToYear,\n  YEARS,\n  CODES,\n  getData,\n  getDataChart,\n  getCodeCitations,\n  filterCodeNames,\n  CUTOFF,\n};\n","/**\n * Column definition for table\n */\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport ABBREVIATIONS from \"../data/abbreviations\";\n//idea: use search icon for link to google scholar\nimport ShowChartIcon from \"@material-ui/icons/ShowChart\";\n\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\n//import NotInterestedIcon from '@material-ui/icons/NotInterested';\n//import CopyrightIcon from '@material-ui/icons/Copyright';\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport NoEncryptionIcon from \"@material-ui/icons/NoEncryption\";\n// import { FlashOnOutlined } from \"@material-ui/icons\";\n\nfunction TooltipText(tooltip, text) {\n  /**\n   * Nicesly styled tooltip.\n   *\n   * Cursor does not change shape.\n   */\n  return (\n    <Tooltip title={tooltip} placement=\"top\" key={tooltip} arrow>\n      <span className=\"has-tooltip\">{text}</span>\n    </Tooltip>\n  );\n}\n\nfunction TooltipTexts(values, tooltips) {\n  /**\n   * Multiple tooltips with zero-width breaking spaces in between to allow text wrapping.\n   */\n  if (values && values.length > 0) {\n    return values\n      .map((x) => TooltipText(tooltips[x], x))\n      .reduce((prev, curr) => [prev, <wbr />, curr]);\n  } else {\n    return null;\n  }\n}\n\nfunction getColumns(data, year) {\n  /**\n   * Prepare columns.\n   *\n   * Since 'customBodyRenderLite' function requires us to fetch the data ourselves, this getColumns function\n   * relies on data to already be present (which is rather bad design).\n   */\n  let columns = [\n    {\n      name: \"name\",\n      label: \"Code\",\n      options: {\n        filter: false,\n        sort: true,\n        // add homepage link to code\n        customBodyRenderLite: (dataIndex) => {\n          const row = data[dataIndex];\n          return (\n            <a href={row[\"homepage\"]} target=\"_blank\" rel=\"noreferrer\">\n              {row[\"name\"]}\n            </a>\n          );\n        },\n      },\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: { filter: false, sort: true, display: false },\n    },\n    {\n      name: \"types\",\n      label: \"Methods\",\n      options: {\n        filter: true,\n        sort: false,\n        customBodyRenderLite: (dataIndex) => {\n          return TooltipTexts(\n            data[dataIndex][\"types\"],\n            ABBREVIATIONS[\"methods\"]\n          );\n        },\n      },\n    },\n    {\n      name: \"element_coverage\",\n      label: \"Elements\",\n      options: { filter: false, sort: true, display: false },\n    },\n    {\n      name: \"tags\",\n      label: \"Tags\",\n      options: {\n        filter: true,\n        sort: false,\n        customBodyRenderLite: (dataIndex) => {\n          return TooltipTexts(data[dataIndex][\"tags\"], ABBREVIATIONS[\"tags\"]);\n        },\n      },\n    },\n    {\n      name: \"distribution_channels\",\n      label: \"Installation\",\n      options: {\n        filter: true,\n        sort: false,\n        customBodyRenderLite: (dataIndex) => {\n          return TooltipTexts(\n            data[dataIndex][\"distribution_channels\"],\n            ABBREVIATIONS[\"distribution_channels\"]\n          );\n        },\n      },\n    },\n    {\n      name: \"acceleration\",\n      label: \"Acceleration\",\n      options: {\n        filter: true,\n        sort: false,\n        display: false,\n        customBodyRenderLite: (dataIndex) => {\n          return TooltipTexts(\n            data[dataIndex][\"acceleration\"],\n            ABBREVIATIONS[\"acceleration\"]\n          );\n        },\n      },\n    },\n    {\n      name: \"apis\",\n      label: \"APIs\",\n      options: {\n        filter: true,\n        sort: true,\n        display: false,\n        customBodyRenderLite: (dataIndex) => {\n          return TooltipTexts(data[dataIndex][\"apis\"], ABBREVIATIONS[\"apis\"]);\n        },\n      },\n    },\n    {\n      name: \"benchmarks\",\n      label: \"Benchmarks\",\n      options: {\n        filter: true,\n        sort: true,\n        display: false,\n        customBodyRenderLite: (dataIndex) => {\n          const types = data[dataIndex][\"benchmarks\"];\n          return types.map((x) => (\n            <a\n              href={\"https://molmod.ugent.be/deltacodesdft\"}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {x}\n            </a>\n          ));\n        },\n      },\n    },\n    {\n      name: \"cost\",\n      label: \"Cost\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRenderLite: (dataIndex) => {\n          const x = data[dataIndex][\"cost\"];\n          const cost = ABBREVIATIONS[\"cost\"];\n          if ([\"commercial\"].includes(x)) {\n            return TooltipText(cost[x], <AttachMoneyIcon />);\n          } else if ([\"free (academia)\"].includes(x)) {\n            return TooltipText(\n              cost[x],\n              <span>\n                <MoneyOffIcon />\n                <SchoolIcon />\n              </span>\n            );\n          } else {\n            return TooltipText(cost[x], <MoneyOffIcon />);\n          }\n        },\n      },\n    },\n    {\n      name: \"source\",\n      label: \"Source\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRenderLite: (dataIndex) => {\n          const x = data[dataIndex][\"source\"];\n          const source = ABBREVIATIONS[\"source\"];\n          if ([\"available\"].includes(x)) {\n            return TooltipText(source[x], <LockOpenIcon color={\"action\"} />);\n          } else if ([\"closed\"].includes(x)) {\n            return TooltipText(source[x], <LockIcon color={\"action\"} />);\n          } else if ([\"copyleft\", \"permissive\"].includes(x)) {\n            const license = data[dataIndex][\"license\"];\n            let text = \"\";\n            if (license) {\n              text = source[x] + \" (\" + license + \")\";\n            } else {\n              text = source[x];\n            }\n            return TooltipText(text, <NoEncryptionIcon color={\"action\"} />);\n          }\n        },\n      },\n    },\n    {\n      name: \"license\",\n      label: \"License\",\n      options: {\n        filter: false,\n        sort: true,\n        display: false,\n        customBodyRenderLite: (dataIndex) => {\n          const license = data[dataIndex][\"license\"];\n          if (!license) {\n            return null;\n          }\n          const type = data[dataIndex][\"source\"];\n          if ([\"copyleft\", \"permissive\"].includes(type)) {\n            const spdxUrl = `https://spdx.org/licenses/${license}.html`;\n            return (\n              <a href={spdxUrl} target=\"_blank\" rel=\"noreferrer\">\n                {license}\n              </a>\n            );\n          } else {\n            return license;\n          }\n        },\n      },\n    },\n    {\n      name: \"citations\",\n      label: \"Citations\",\n      options: {\n        filter: false,\n        sort: true,\n        // add google scholar link to number of citations\n        customBodyRenderLite: (dataIndex) => {\n          const row = data[dataIndex];\n          let searchUrl = \"\";\n\n          if (row[\"query_method\"] === \"publication\") {\n            searchUrl =\n              \"https://scholar.google.com/scholar?cites=\" +\n              row[\"query_publication_id\"].toString();\n          } else {\n            searchUrl =\n              \"https://scholar.google.com/scholar?q=\" +\n              encodeURIComponent(row[\"query_string\"]);\n          }\n          searchUrl += \"&hl=en&as_sdt=0%2C5&as_ylo=\" + year + \"&as_yhi=\" + year;\n          return (\n            <a href={searchUrl} target=\"_blank\" rel=\"noreferrer\" title={\"Recorded \" + row[\"datestamp\"]}>\n              {row[\"citations\"]}\n            </a>\n          );\n        },\n      },\n    },\n    {\n      name: \"trend\",\n      label: \"Trend\",\n      options: {\n        filter: false,\n        sort: false,\n        // add google scholar link to number of citations\n        customBodyRenderLite: (dataIndex) => {\n          const row = data[dataIndex];\n          return (\n            <Button\n              href={\"#/charts/\" + encodeURIComponent(row[\"name\"])}\n              color=\"secondary\"\n            >\n              <ShowChartIcon />{\" \"}\n            </Button>\n          );\n        },\n      },\n    },\n  ];\n\n  return columns;\n}\n\nexport { getColumns };\n","/**\n * Overview table with all codes.\n */\nimport React from \"react\";\nimport MUIDataTable from \"mui-datatables\";\n//import RangeSlider from './RangeSlider'\n\nimport { YEARS, getData } from \"./Config\";\nimport { getColumns } from \"./Columns\";\n\nconst lastYear = YEARS[YEARS.length-1];\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: lastYear,\n      data: getData(lastYear),\n      columns: null,\n      options: {\n        print: false,\n        filterType: \"checkbox\",\n        filterArrayFullMatch: false,\n        sortOrder: { name: \"citations\", direction: \"desc\" },\n        rowsPerPage: 100,\n        selectableRows: false,\n        setTableProps: () => {\n          return {\n            // material ui v4 only\n            size: \"small\",\n          };\n        },\n      },\n    };\n  }\n\n  handleYearChange(event) {\n    this.setState({\n      year: event.target.value,\n      data: getData(event.target.value),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MUIDataTable\n            title={\n              <h2>\n                Citation Data &nbsp;\n                <select\n                  defaultValue={this.state.year}\n                  onChange={(event) => this.handleYearChange(event)}\n                >\n                  {YEARS.map((x) => (\n                    <option key={x}>{x}</option>\n                  ))}\n                </select>\n              </h2>\n            }\n            columns={getColumns(this.state.data, this.state.year)}\n            data={this.state.data}\n            options={this.state.options}\n          />\n        </header>\n      </div>\n    );\n    //title={<RangeSlider year={this.state.year} />\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","export default __webpack_public_path__ + \"static/media/about.a3e0bcdf.md\";","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport useStyles from \"./Dashboard/Styles\";\nimport Title from \"./Dashboard/Title\";\nimport packageJson from \"../../package.json\";\n\nimport aboutMD from \"../text/about.md\";\n\nconst fillTemplate = function (templateString, templateVars) {\n  /**\n   * Replace JS variables in markdown strings.\n   *\n   * See https://stackoverflow.com/a/37217166/1069467\n   */\n  // eslint-disable-next-line\n  return new Function(\"return `\" + templateString + \"`;\").call(templateVars);\n};\n\nclass MarkdownPane extends React.Component {\n  /**\n   * Pane to display markdown content from file\n   * \n   * Can be used with markdown file or markdown string:\n   * \n   *   <MarkdownPane title=\"About\" markdown={aboutMD} classes={classes} />\n       <MarkdownPane title=\"Methodology\" markdownFile={methodologyMD} classes={classes} />\n   */\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title,\n      markdownFile: props.markdownFile,\n      markdown: props.markdown || \"\",\n      classes: props.classes,\n    };\n  }\n\n  componentWillMount() {\n    // Get contents from Markdown file and put them in the React state, so we can reference it in render() below.\n    if (!this.state.markdown && this.state.markdownFile) {\n      fetch(this.state.markdownFile)\n        .then((res) => res.text())\n        .then((text) =>\n          this.setState({\n            markdown: fillTemplate(text, { packageJson: packageJson }),\n          })\n        );\n    }\n  }\n\n  render() {\n    return (\n      <Grid item xs={12}>\n        <Paper className={this.state.classes.paper}>\n          <React.Fragment>\n            <Title>{this.state.title}</Title>\n            <Typography component=\"div\" variant=\"body1\" className=\"markdown\">\n              <ReactMarkdown children={this.state.markdown} />\n            </Typography>\n          </React.Fragment>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default function Home() {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={3}>\n      <MarkdownPane title=\"About\" markdownFile={aboutMD} classes={classes} />\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Title from \"./Dashboard/Title\";\nimport useStyles from \"./Dashboard/Styles\";\n\nimport { ResponsiveLine } from \"@nivo/line\";\n\nimport { getCodeCitations } from \"./Config\";\nimport { useParams } from \"react-router-dom\";\n\nconst THEME = {\n  axis: {\n    legend: {\n      text: {\n        fontSize: \"14px\",\n      },\n    },\n  },\n};\n\nfunction getTitle(codeName, citations) {\n  /**\n   * Return title for chart.\n   */\n  let reverseCitations = [];\n  let yearBegin = 0;\n  const minCitations = 10;\n  // go backwards; stop when hitting 10 citations or lower\n  for (const point of citations.slice().reverse()) {\n    if (point[\"y\"] < minCitations) {\n      break;\n    }\n    reverseCitations.push(point[\"y\"]);\n    yearBegin = point[\"x\"];\n  }\n\n  // Need at least two years with > minCitations\n  if (reverseCitations.length < 2) {\n    return codeName;\n  }\n\n  const ratio = reverseCitations[0] / reverseCitations.slice(-1)[0];\n  const annualGrowth =\n    (Math.pow(ratio, 1.0 / (reverseCitations.length - 1)) - 1) * 100;\n  const title =\n    codeName +\n    \" \" +\n    annualGrowth.toFixed(1) +\n    \"% growth (year-over-year) since \" +\n    yearBegin;\n\n  return title;\n}\n\nfunction SingleChart() {\n  /**\n   * Return chart for single code.\n   *\n   * Name of code is parsed from URI.\n   */\n\n  let codeName = decodeURIComponent(useParams()[\"code\"]);\n  const citations = getCodeCitations([codeName]);\n  const title = getTitle(codeName, citations);\n  const classes = useStyles();\n\n  const data = { id: codeName, data: citations };\n\n  return (\n    <Paper className={classes.paper}>{nivoChart([data], title, false)}</Paper>\n  );\n}\n\nfunction nivoChart(data, title, legend = true) {\n  /**\n   * Return nivo line-chart with default formatting for given data and title.\n   */\n  let legend_list = [];\n  let margin_right = 50;\n  if (legend) {\n    legend_list = [\n      {\n        anchor: \"top-left\",\n        direction: \"column\",\n        justify: false,\n        translateX: 10,\n        translateY: 10,\n        itemsSpacing: 0,\n        itemDirection: \"left-to-right\",\n        itemWidth: 80,\n        itemHeight: 20,\n        itemOpacity: 0.75,\n        symbolSize: 12,\n        symbolShape: \"circle\",\n        symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n        effects: [\n          {\n            on: \"hover\",\n            style: {\n              itemBackground: \"rgba(0, 0, 0, .03)\",\n              itemOpacity: 1,\n            },\n          },\n        ],\n      },\n    ];\n  }\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <div className=\"chart\">\n        <ResponsiveLine\n          title={title}\n          data={data}\n          margin={{ top: 20, right: margin_right, bottom: 50, left: 70 }}\n          xScale={{ type: \"point\" }}\n          yScale={{\n            type: \"linear\",\n            min: 0,\n            max: \"auto\",\n            stacked: false,\n            reverse: false,\n          }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            orient: \"bottom\",\n            legend: \"Year\",\n            legendOffset: 36,\n            legendPosition: \"middle\",\n          }}\n          axisLeft={{\n            orient: \"left\",\n            legend: \"Citations per year (Google Scholar)\",\n            legendOffset: -55,\n            legendPosition: \"middle\",\n          }}\n          pointSize={10}\n          pointColor={{ theme: \"background\" }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: \"serieColor\" }}\n          pointLabelYOffset={-12}\n          enableCrosshair={true}\n          useMesh={true}\n          legends={legend_list}\n          animate={false}\n          theme={THEME}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport { SingleChart, nivoChart };\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport useStyles from \"./Dashboard/Styles\";\nimport Title from \"./Dashboard/Title\";\nimport {\n  CUTOFF,\n  YEARS,\n  getData,\n  filterCodeNames,\n  getCodeCitations,\n} from \"./Config\";\nimport { nivoChart } from \"./Chart\";\n// import { Card } from '@material-ui/core';\n\nfunction citationGrowth(year) {\n  /**\n   * Compute citation growth for given year with respect to previous one.\n   */\n\n  const dataNew = getData(year);\n  const dataOld = getData(year - 1);\n\n  let data = {\n    total: [],\n    absoluteGrowth: [],\n    relativeGrowth: [],\n    typeCounts: [],\n  };\n  let delta = 0;\n  let codeName = \"\";\n\n  dataNew.forEach((dNew, index) => {\n    codeName = dNew[\"name\"];\n    delta = dNew[\"citations\"] - dataOld[index][\"citations\"];\n    data[\"absoluteGrowth\"].push([codeName, delta]);\n    data[\"total\"].push([codeName, dNew[\"citations\"]]);\n\n    if (dataNew[index][\"citations\"] < CUTOFF) {\n      // We require at least 100 citations for analyzing growth\n      data[\"relativeGrowth\"].push([codeName, 0]);\n    } else {\n      const factor = delta / parseFloat(dataOld[index][\"citations\"]);\n      data[\"relativeGrowth\"].push([codeName, factor]);\n    }\n\n    // add code count to\n    for (const type of dNew[\"types\"]) {\n      if (type in data[\"typeCounts\"]) {\n        data[\"typeCounts\"][type] += 1;\n      } else {\n        data[\"typeCounts\"][type] = 1;\n      }\n    }\n  });\n\n  data[\"absoluteGrowth\"]\n    .sort((a, b) => {\n      return a[1] - b[1];\n    })\n    .reverse();\n  data[\"relativeGrowth\"]\n    .sort((a, b) => {\n      return a[1] - b[1];\n    })\n    .reverse();\n  data[\"total\"]\n    .sort((a, b) => {\n      return a[1] - b[1];\n    })\n    .reverse();\n\n  return data;\n}\n\nfunction costGraph() {\n  /**\n   * Citation trend by price (free/commercial).\n   */\n\n  // Careful: it seems the legend coloring does not match the one of the graph automatically\n  let groups = {\n    \"Free (general)\": [\"free\"],\n    \"Free (academia)\": [\"free (academia)\"],\n    \"Free (sum)\": [\"free\", \"free (academia)\"],\n    Commercial: [\"commercial\"],\n  };\n\n  let lines = [];\n  for (const group in groups) {\n    const codeNames = filterCodeNames({ cost: groups[group] });\n    lines.push({ id: group, data: getCodeCitations(codeNames) });\n  }\n  return nivoChart(lines, \"\");\n}\n\nfunction sourceGraph() {\n  /**\n   * Citation trend by source code handling.\n   */\n\n  // Careful: it seems the legend coloring does not match the one of the graph automatically\n  let groups = {\n    \"Closed source\": [\"closed\"],\n    \"Open-source\": [\"copyleft\", \"permissive\"],\n    \"Source available\": [\"copyleft\", \"permissive\", \"available\"],\n  };\n\n  let lines = [];\n  for (const group in groups) {\n    const codeNames = filterCodeNames({ source: groups[group] });\n    lines.push({ id: group, data: getCodeCitations(codeNames) });\n  }\n  return nivoChart(lines, \"\");\n}\n\nfunction chartLink(codeName) {\n  /**\n   * Return hyperlink to citation chart for given code name.\n   */\n  return <a href={\"#/charts/\" + encodeURIComponent(codeName)}>{codeName}</a>;\n}\n\nfunction totalList(data) {\n  return (\n    <Typography component=\"div\" variant=\"subtitle1\">\n      <ol>\n        {data.map((line) => (\n          <li>\n            {chartLink(line[0])}\n            {\": \" + line[1] + \"\\n\"}\n          </li>\n        ))}\n      </ol>\n    </Typography>\n  );\n}\n\nfunction absoluteGrowthList(data) {\n  return (\n    <Typography component=\"div\" variant=\"subtitle1\">\n      <ol>\n        {data.map((line) => (\n          <li>\n            {chartLink(line[0])}\n            {\": +\" + line[1] + \"\\n\"}\n          </li>\n        ))}\n      </ol>\n    </Typography>\n  );\n}\n\nfunction relativeGrowthList(data) {\n  return (\n    <Typography component=\"div\" variant=\"subtitle1\">\n      <ol>\n        {data.map((line) => (\n          <li>\n            {chartLink(line[0])}\n            {\": +\" + parseInt(line[1] * 100) + \"%\\n\"}\n          </li>\n        ))}\n      </ol>\n    </Typography>\n  );\n}\n\n\n// Breakpoint sizes: xs, sm, md, lg, xl and xxl\n\nfunction Card(title, message, footnote = \"\", widthSmall, widthLarge = null) {\n  /**\n   * Returns Grid component wrapped in Paper.\n   *\n   * @param title - Title of card\n   * @param message - Content of the card\n   * @param footnote - Display below content\n   * @param widthSmall - Width of card when viewpoint is small\n   * @param widthLarge - Width of card when viewpoint is large\n   */\n  const classes = useStyles();\n  if (!widthSmall) {\n    widthSmall = widthLarge;\n  }\n  return [\n    <Grid item xs={widthSmall} sm={widthSmall} md={widthLarge}>\n      <Paper className={classes.paper}>\n        <React.Fragment>\n          <Title>{title}</Title>\n          {message}\n          <Typography color=\"textSecondary\" className={classes.depositContext}>\n            {footnote}\n          </Typography>\n        </React.Fragment>\n      </Paper>\n    </Grid>,\n  ];\n}\n\nlet CURRENT_YEAR = YEARS.slice(-1)[0];\nlet GROWTH = citationGrowth(CURRENT_YEAR);\n\nexport default function Home() {\n  // {Card(\"Simulation engines\", typeList(GROWTH['typeCounts']), \"Number of simulation engines per method.\", 4)}\n  return (\n    <Grid container spacing={3}>\n      {Card(\n        \"Highly cited in \" + CURRENT_YEAR,\n        totalList(GROWTH[\"total\"].slice(0, 10)),\n        \"\",\n        10,\n        4\n      )}\n      {Card(\n        \"High citation growth \" + CURRENT_YEAR,\n        absoluteGrowthList(GROWTH[\"absoluteGrowth\"].slice(0, 10)),\n        \"With respect to \" + (CURRENT_YEAR - 1) + \".\",\n        10,\n        4\n      )}\n      {Card(\n        \"High relative citation growth \" + CURRENT_YEAR,\n        relativeGrowthList(GROWTH[\"relativeGrowth\"].slice(0, 10)),\n        \"With respect to \" + (CURRENT_YEAR - 1) + \".\",\n        10,\n        4\n      )}\n      {Card(\"Citations commercial vs free\", costGraph(), \"\", 12, 10)}\n      {Card(\n        \"Citations by source code availability\",\n        sourceGraph(),\n        '\"Source available\" includes engines whose source code can be obtained for free or for a fee. ' +\n          '\"Open-source\" engines are the subset of source-available engines with OSI-approved licenses.',\n        12, 10\n      )}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\n\n\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { mainListItems } from \"./components/Dashboard/listItems\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport useStyles from \"./components/Dashboard/Styles\";\nimport Table from \"./components/Table\";\nimport About from \"./components/About\";\nimport Statistics from \"./components/Statistics\";\nimport { SingleChart } from \"./components/Chart\";\nimport packageJson from \"../package.json\";\nimport { useTheme } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link\n        color=\"inherit\"\n        href={packageJson.author.url}\n        target=\"_blank\"\n      >\n        {packageJson.author.name}\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\". \"}\n      <Link\n        href={packageJson.repository.url + \"/commits/master\"}\n        target=\"_blank\"\n      >\n        Changelog\n      </Link>\n      <Link href=\"https://zenodo.org/badge/latestdoi/327603600\">\n        <img\n          className=\"zenodo\"\n          src=\"https://zenodo.org/badge/327603600.svg\"\n          alt=\"DOI\"\n        />\n      </Link>\n    </Typography>\n  );\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>{mainListItems}\n      </List>\n    </div>\n  );\n\n  // const container = window !== undefined ? () => window().document.body : undefined;\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          Trends in atomistic simulation engines\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            // container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n      <div className={classes.toolbar} />\n        <Container maxWidth=\"xl\" className={classes.container}>\n          <Router basename=\"/\">\n            <Route exact path=\"/\" component={Table} />\n            <Route exact path=\"/table\" component={Table} />\n            <Route exact path=\"/charts/:code\" component={SingleChart} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/stats\" component={Statistics} />\n          </Router>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Dashboard from \"./Dashboard\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}